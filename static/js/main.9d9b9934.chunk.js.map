{"version":3,"sources":["images/java.png","images/android.png","images/sagar.jpg","images/node.png","footer.js","dark.js","Portfolio.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","class","href","target","lightTheme","footerback","madefooter","background","cardbackground","text","darkTheme","DarkMode","light","dark","Component","Portfolio","goDown","document","getElementById","scrollIntoView","src","require","alt","aria-hidden","id","onClick","this","style","width","e","preventDefault","window","open","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9d9b9934.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/java.4eb1819d.png\";","module.exports = __webpack_public_path__ + \"static/media/android.6bb47632.png\";","module.exports = __webpack_public_path__ + \"static/media/sagar.18f6e163.jpg\";","module.exports = __webpack_public_path__ + \"static/media/node.b73453c6.png\";","import React from 'react'\r\nimport './footer.css'\r\n\r\nconst Footer = () =>\r\n{\r\n    return(\r\n        <div className = \"main-footer\">\r\n            <div class = \"container footer\">\r\n                <div className = \"links text-center\">\r\n                <a href=\"https://www.facebook.com/sagar.gurung.357284\" target = \"_blank\" class=\"fa fafa fa-facebook\"></a>\r\n                <a href=\"https://www.instagram.com/sagar_gurung1001/\" target = \"_blank\" class=\"fa fafa fa-instagram\"></a>\r\n                <a href=\"https://www.linkedin.com/in/sagar-gurung-99450619b/\" target = \"_blank\" class=\"fa fafa fa-linkedin\"></a>\r\n                <a href=\"https://www.youtube.com/channel/UCSoD755igNn-BXvOVY1fUlA?view_as=subscriber\" target = \"_blank\" class=\"fa fafa fa-youtube\"></a>\r\n                </div>\r\n\r\n                <div className = \"bottom text-center\">\r\n                    <p className = \"madeby\">Made with <i className = \"fa fafafa fa-heart\"></i> by Sagar Gurung</p>\r\n                </div>\r\n            </div>             \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, {Component} from \"react\";\r\nimport DarkTheme from 'react-dark-theme'\r\nimport './portfolio.css'\r\n\r\n\r\nconst lightTheme = {\r\n    footerback: '#d6b1eb',\r\n    madefooter: 'black',\r\n    background: 'white',\r\n    cardbackground: '',\r\n    text : ''\r\n  }\r\n  \r\n  const darkTheme = {\r\n    footerback: 'black',\r\n    madefooter: 'white',\r\n    background: '#202020',\r\n    cardbackground: '#1b1a1a',\r\n    text : 'white'\r\n}\r\nclass DarkMode extends Component\r\n{\r\n    \r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n                <DarkTheme\r\n                light = {lightTheme}\r\n                dark = {darkTheme}\r\n                className = \"mydark\"\r\n                >\r\n                </DarkTheme> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DarkMode","import React, {useState, Component} from 'react'\r\nimport './portfolio.css'\r\nimport Footer from './footer.js'\r\nimport DarkMode from './dark.js'\r\n\r\nclass Portfolio extends Component\r\n{\r\n    constructor()\r\n    {\r\n        super()\r\n    }\r\n    goDown = () =>\r\n    {\r\n        // alert(\"hello i am clicked\")\r\n        var element_id = document.getElementById('project')\r\n        element_id.scrollIntoView()\r\n    }\r\n\r\n    \r\n\r\n   \r\n    render()\r\n    {        \r\n        return(\r\n            <div className = \"main\">\r\n                <div className = \"darky text-right\">\r\n                    <DarkMode />\r\n                </div>\r\n                \r\n                <div className = \"my-content\">\r\n                <div className = \"about-me container text-center\">\r\n                        <div className = \"profile-image text-center\">\r\n                            <img src = {require('./images/sagar.jpg')} alt = \"SagarGi\" class = \"avatar\"></img>\r\n                        </div>\r\n                        <h1>About Me</h1>\r\n                        <p className = \"intropara\">Hello World,<i class=\"fa fa-hand-paper-o wave\" aria-hidden=\"true\"></i> My name is Sagar Gurung.<br></br>I am a software engineering student pursuing BE in software in GCES.\r\n                        <br></br>I like java most than other programing language but i also like c,c++ and javascript.<br></br>\r\n                        I am a learning developer, you can find some of my projects below. Beside that i also write <a href = \"https://www.saagargurung.com.np/\" target = \"_blank\">BLOGS</a></p>\r\n                </div>\r\n\r\n                <div className = \"container\">\r\n\r\n                    <div className = \"projects text-center\" id = \"project\">\r\n                            <h1>My Projects</h1>\r\n                            <div>\r\n                            <i class=\"fa fa-angle-double-down icon-down\" onClick = {this.goDown}></i>\r\n                            </div>   \r\n                    </div>\r\n\r\n                </div>\r\n\r\n                {/* project section */}\r\n                    <div className = \"container mt-4\">\r\n                 \r\n                    <div className = \"row text-center\">\r\n\r\n                        <div class=\"col-xs-4 col-sm-4 col-md-6 col-lg-4\">\r\n                            <div className = \"container\">                         \r\n                                <div className = \" card-hi card\" style = {{width: \"100%\"}}>\r\n                                <h4>AR System</h4>\r\n                                <img src = {require('./images/java.png')} alt = \"SagarGi\" class = \"display-pic\" ></img>  \r\n                                <button className = \"button\" onClick={(e) => {e.preventDefault(); window.open('https://github.com/SagarGi/AR-System', \"_blank\")}}>View Project</button>\r\n                                \r\n                                </div>\r\n                            </div>\r\n                       </div>\r\n                        <div class=\"col-xs-4 col-sm-4 col-md-6 col-lg-4\">\r\n                        <div className = \"container\">                         \r\n                                <div className = \" card-hi card\" style = {{width: \"100%\"}}>\r\n                                <h4>Chit-Chat App</h4>\r\n                                <img src = {require('./images/node.png')} alt = \"SagarGi\" class = \"display-pic\"></img>                             \r\n                                <button className = \"button\" onClick={(e) => {e.preventDefault(); window.open('https://github.com/SagarGi/Chit_Chat', \"_blank\")}}>View Project</button>\r\n                               \r\n                                \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-xs-4 col-sm-4 col-md-6 col-lg-4\">\r\n                        <div className = \"container\">                         \r\n                                <div className = \" card-hi card\" style = {{width: \"100%\"}}>\r\n                                <h4>DES Implementation</h4>\r\n                                <img src = {require('./images/java.png')} alt = \"SagarGi\" class = \"display-pic\"></img>                             \r\n                                <button className = \"button\" onClick={(e) => {e.preventDefault(); window.open('https://github.com/SagarGi/DESImplementation', \"_blank\")}}>View Project</button>\r\n                                \r\n                               \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-xs-4 col-sm-4 col-md-6 col-lg-4\">\r\n                        <div className = \"container\">                         \r\n                                <div className = \" card-hi card\" style = {{width: \"100%\"}}>\r\n                                <h4>FOODHut</h4>\r\n                                <img src = {require('./images/android.png')} alt = \"SagarGi\" class = \"display-pic\"></img>                             \r\n                                <button className = \"button\" onClick={(e) => {e.preventDefault(); window.open('https://github.com/SagarGi/FOODHut', \"_blank\")}}>View Project</button>\r\n                                \r\n                                \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-xs-4 col-sm-4 col-md-6 col-lg-4\">\r\n                        <div className = \"container\">                         \r\n                                <div className = \" card-hi card\" style = {{width: \"100%\"}}>\r\n                                <h4>BMI</h4>\r\n                                <img src = {require('./images/android.png')} alt = \"SagarGi\" class = \"display-pic\"></img>                             \r\n                                <button className = \"button\" onClick={(e) => {e.preventDefault(); window.open('https://github.com/SagarGi/BMI', \"_blank\")}}>View Project</button>\r\n                                \r\n                               \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-xs-4 col-sm-4 col-md-6 col-lg-4\">\r\n                        <div className = \"container\">                         \r\n                                <div className = \" card-hi card\" style = {{width: \"100%\"}}>\r\n                                <h4>SimpleDice Game</h4>\r\n                                <img src = {require('./images/java.png')} alt = \"SagarGi\" class = \"display-pic\"></img>                             \r\n                                <button className = \"button\" onClick={(e) => {e.preventDefault(); window.open('https://github.com/SagarGi/SimpleDiceGame', \"_blank\")}}>View Project</button>\r\n                               \r\n                               \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                            \r\n                        </div>\r\n                </div>\r\n\r\n                {/* more section */}\r\n                 \r\n                 <div className = \"container\">\r\n                     <div className = \"more text-center mt-4\">\r\n                            <h4>See More Projects</h4>\r\n                            <i class=\"fa fa-angle-double-down icon-down\" onClick = {(e) => {e.preventDefault(); window.open('https://github.com/SagarGi/', \"_blank\")}}></i>\r\n                     </div>\r\n                 </div>\r\n\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Portfolio","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Portfolio from './Portfolio';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<Portfolio /> , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}